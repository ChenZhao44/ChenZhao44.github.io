---
// import { type CollectionEntry, render } from "astro:content";
import { type CollectionEntry } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
// import { Image } from 'astro:assets';
// import { undefined } from "astro:schema";

const HIGHLIGHTAUTHOR = "Chen Zhao";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	publication: CollectionEntry<"publication">;
	isPreview?: boolean | undefined;
};

// const { as: Tag = "div", publication, isPreview = false } = Astro.props;
const { publication, isPreview = false } = Astro.props;
// const { Content } = await render(publication);

const splitStr = (authors: string | undefined, targetAuthor: string) => {
  if (!authors) return [];
  const parts = authors.split(new RegExp(`(${targetAuthor})`, 'g'));
  return parts;
};

const decomposeURL = (URL: string | undefined) => {
  if (!URL) return { text: '', url: '' };
  const parts = URL.split(": ");
  return { text: parts[0], url: parts[1] };
};

const dataLink = decomposeURL(publication.data.dataURL);
const paperLink = decomposeURL(publication.data.paperURL);
const codeLink = decomposeURL(publication.data.codeURL);
const webLink = decomposeURL(publication.data.webURL);
const authorsParts = splitStr(publication.data.authors, HIGHLIGHTAUTHOR).filter(x => x.length > 0);
const correspondingAuthors = publication.data.correspondingAuthors;

const hasManyAuthors = publication.data.moreAuthors && publication.data.moreAuthors.length > 0;
const moreAuthors = hasManyAuthors ? publication.data.moreAuthors + ', ' : undefined;
const hasCorrespondingAuthors = correspondingAuthors && correspondingAuthors.length > 0;

---

<div
	class="w-full not-prose group relative grid grid-cols-auto md:grid-cols-[204px_auto] gap-4 rounded-lg items-center border border-black/15 px-4 py-3	transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white"
>
	<div>
		<img
			src={publication.data.img ?? ''}
			alt={publication.data.imgAlt ?? ''}
			width={640}
			height={480}
			class="shadow-sm rounded-md sm:mr-6 hover:opacity-80 transition hidden md:flex cursor-pointer"
			loading="eager"
			onclick="
				const modal = document.createElement('div');
				modal.style.position = 'fixed';
				modal.style.top = '0';
				modal.style.left = '0';
				modal.style.width = '100%';
				modal.style.height = '100%';
				modal.style.backgroundColor = 'rgba(0,0,0,0.8)';
				modal.style.display = 'flex';
				modal.style.justifyContent = 'center';
				modal.style.alignItems = 'center';
				modal.style.zIndex = '1000';
				modal.onclick = () => modal.remove();
				
				const img = document.createElement('img');
				img.src = this.src;
				img.style.maxWidth = '90%';
				img.style.maxHeight = '90%';
				img.style.objectFit = 'contain';
				
				modal.appendChild(img);
				document.body.appendChild(modal);
			"
		/>
	</div>
	<div class="flex items-center h-full">
		<div class="flex flex-col">
			<div class="w-full">
				<div class="text-base font-semibold w-full">
					{publication.data.title}
				</div>
				<div class="text-sm w-full">
					<div class="authors-container">
						<div class="no-space">
							<span class="authors-list">{authorsParts.map((part: string) =>
								part.includes(HIGHLIGHTAUTHOR) ? <u><strong>{part}</strong></u> : part
							)}</span>{hasManyAuthors && (<span class="separator">, </span>)}{hasManyAuthors && (
								<span class="more-authors hidden">{moreAuthors}</span><button
									type="button"
									class="show-more-btn text-sm text-blue-500 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 ml-2"
									onclick="
										const more = this.parentElement.querySelector('.more-authors');
										more.classList.toggle('hidden');
										this.textContent = more.classList.contains('hidden') ? '[more]' : '[less]';
									"
								>[more]</button>
							)}{hasCorrespondingAuthors && (<span class="separator">, </span>)}
							{hasCorrespondingAuthors && (
								<span class="corresponding-authors">
									<span set:html={correspondingAuthors.split(',').map((author: string) => author.trim() + '<sup>â€ </sup>').join(', ')}></span>
								</span>
							)}
						</div>
					</div>
					<style>
						.no-space {
							display: inline;
							padding: 0;
							margin: 0;
						}
						.authors-container {
							display: flex;
							align-items: baseline;
							flex-wrap: wrap;
							font-size: 0;
						}
						.authors-container > * {
							font-size: 0.875rem;
						}
						.authors-list {
							display: inline;
							padding: 0;
							margin: 0;
						}
						.more-authors {
							display: inline;
							padding: 0;
							margin: 0;
						}
						.more-authors.hidden {
							display: none;
							padding: 0;
							margin: 0;
						}
						.show-more-btn {
							cursor: pointer;
							background: none;
							border: none;
							padding: 0;
							margin: 0;
							font: inherit;
							display: inline;
						}
						.corresponding-authors {
							display: inline;
							padding: 0;
							margin: 0;
						}
					</style>
				</div>
				{!isPreview && (
					<details class="text-sm w-full">
						<summary class="text-blue-500 hover:text-blue-700 dark:text-blue-400">Abstract</summary>
						<p>{publication.data.description}</p>
					</details>
				)}
				<div class="text-sm w-full">
					{paperLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={paperLink.url}>{paperLink.text}</a>}
					{codeLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={codeLink.url}>{codeLink.text}</a>}
					{webLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={webLink.url}>{webLink.text}</a>}
					{dataLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={dataLink.url}>{dataLink.text}</a>}
				</div>
				<div class="text-sm">
					{publication.data.pub != "" && (
						<>In <div class="inline italic">{publication.data.pub}</div></>
					)}
				</div>
			</div>
		</div>
	</div>
</div>
