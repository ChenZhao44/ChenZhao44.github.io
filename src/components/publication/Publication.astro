---
import { type CollectionEntry, render } from "astro:content";
import FormattedDate from "@/components/FormattedDate.astro";
import type { HTMLTag, Polymorphic } from "astro/types";

const HIGHLIGHTAUTHOR = "Chen Zhao";

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	publication: CollectionEntry<"publication">;
	isPreview?: boolean | undefined;
};

const { as: Tag = "div", publication, isPreview = false } = Astro.props;
const { Content } = await render(publication);

const splitStr = (authors: string | undefined, targetAuthor: string) => {
  if (!authors) return [];
  const parts = authors.split(new RegExp(`(${targetAuthor})`, 'g'));
  return parts;
};
const decomposeURL = (URL: string | undefined) => {
  if (!URL) return { text: '', url: '' };
  const parts = URL.split(": ");
  return { text: parts[0], url: parts[1] };
};

const dataLink = decomposeURL(publication.data.dataURL);
const paperLink = decomposeURL(publication.data.paperURL);
const codeLink = decomposeURL(publication.data.codeURL);
const webLink = decomposeURL(publication.data.webURL);
const authorsParts = splitStr(publication.data.authors, HIGHLIGHTAUTHOR);

---

<div
	class="w-full not-prose group relative grid grid-cols-auto md:grid-cols-[204px_auto] gap-4 rounded-lg items-center border border-black/15 px-4 py-3	transition-colors duration-300 ease-in-out hover:bg-black/5 hover:text-black focus-visible:bg-black/5 focus-visible:text-black dark:border-white/20 dark:hover:bg-white/5 dark:hover:text-white dark:focus-visible:bg-white/5 dark:focus-visible:text-white"
>
	<!-- <Image
	src={publication.data.img ?? ''}
	alt={publication.data.imgAlt ?? ''}
	width={640}
	height={480}
	class="sm:w-[240px] sm:h-[135px] shadow-sm rounded-md sm:mr-6 hover:opacity-80 transition hidden md:flex"
	loading="eager"
	/> -->

	<div></div>

	<div class="flex items-center h-full">
		<div class="flex flex-col">
			<div class="w-full">
				<div class="text-md font-semibold w-full">
					{publication.data.title}
				</div>
				<div class="text-sm w-full">
					{authorsParts.map((part:any) =>
						part === HIGHLIGHTAUTHOR ? <u><strong>{part}</strong></u> : part
					)}
				</div>
				<div class="text-sm w-full">
					{paperLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={paperLink.url}>{paperLink.text}</a>}
					{codeLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={codeLink.url}>{codeLink.text}</a>}
					{webLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={webLink.url}>{webLink.text}</a>}
					{dataLink.url!="" && <a class="underline hover:text-cyan-500 text-orange-500 dark:hover:text-cyan-500 transition-colors duration-300 ease-in-out visited:text-indigo-400" target="_blank" href={dataLink.url}>{dataLink.text}</a>}
				</div>
				<div class="text-sm">
					{publication.data.pub != "" && (
						<>In <div class="inline italic">{publication.data.pub}</div></>
					)}
				</div>
			</div>
			<p class="text-sm mt-2 break-words">
				{isPreview && publication.data.description}
			</p>
		</div>
	</div>
</div>
<!-- 
<article
	class:list={[
		isPreview && "inline-grid rounded-md bg-[rgb(240,240,240)] px-4 py-3 dark:bg-[rgb(33,35,38)]",
	]}
	data-pagefind-body={isPreview ? false : true}
>
	<Tag class="title" class:list={{ "text-base": isPreview }}>
		{
			isPreview ? (
				<a class="cactus-link" href={`/publications/${publication.id}/`}>
					{publication.data.title}
				</a>
			) : (
				<>{publication.data.title}</>
			)
		}
	</Tag>
	<FormattedDate
		dateTimeOptions={{
			hour: "2-digit",
			minute: "2-digit",
			year: "2-digit",
			month: "2-digit",
			day: "2-digit",
		}}
		date={publication.data.publishDate}
	/>
	<div class="authors mt-2">
		{publication.data.authors}
	</div>
	<div
		class="prose prose-sm prose-cactus mt-4 max-w-none [&>p:last-of-type]:mb-0"
		class:list={{ "line-clamp-6": isPreview }}
	>
		<Content />
	</div>
</article> -->
